// Source: https://usaco.guide/general/io

#include <bits/stdc++.h>
using namespace std;

int main() {
	int N, K, ans=0;
    cin >> N >> K;
    int max_x=0, max_y = 0;
    int diff_grid[1003][1003] = {0};
    for (int i=0;i<=N-1;i++){
        int x1, x2, y1, y2;
        cin >> x1 >> y1 >> x2 >> y2;
        //2d difference array, the four "corners" are the key
        diff_grid[x1][y1] += 1;
        diff_grid[x2][y1] += -1;
        diff_grid[x1][y2] += -1;
        diff_grid[x2][y2] += 1;
        max_x = max(max_x, x2);
        max_y = max(max_y, y2);
    }
    //iterate over rows, computing values in the grid;
    for (int i=0;i<=max_x;i++){
        diff_grid[i][0] = diff_grid[i][0];
        //can ignore first element since that wont need prefix sums, will also be out of bounds
        for (int j=1;j<=max_y;j++){
            //previous term, apply diff values
            diff_grid[i][j] = diff_grid[i][j] + diff_grid[i][j-1];
        }
    }
    //iterate over columns, cumulative sum
    for (int j=0;j<=max_y;j++){
        for (int i=1;i<=max_x;i++){
            diff_grid[i][j] = diff_grid[i][j] + diff_grid[i-1][j];
        }
    }
    for (int i=0;i<=max_x;i++){
        for (int j=0;j<=max_y;j++){
            if (diff_grid[i][j]==K){
                ans++;
            }
        }
    }
    cout << ans;
}
